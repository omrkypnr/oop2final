# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\Scripts.\2024_q2.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import random

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(506, 497)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.pushButton_generate = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_generate.setMinimumSize(QtCore.QSize(461, 31))
        self.pushButton_generate.setObjectName("pushButton_generate")
        self.verticalLayout.addWidget(self.pushButton_generate)
        self.label_numbers = QtWidgets.QLabel(self.centralwidget)
        self.label_numbers.setMinimumSize(QtCore.QSize(461, 16))
        self.label_numbers.setObjectName("label_numbers")
        self.verticalLayout.addWidget(self.label_numbers)
        self.textEdit_numbers = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit_numbers.setMinimumSize(QtCore.QSize(461, 111))
        self.textEdit_numbers.setObjectName("textEdit_numbers")
        self.verticalLayout.addWidget(self.textEdit_numbers)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.radioButton_max = QtWidgets.QRadioButton(self.centralwidget)
        self.radioButton_max.setEnabled(False)
        self.radioButton_max.setMinimumSize(QtCore.QSize(91, 21))
        self.radioButton_max.setObjectName("radioButton_max")
        self.horizontalLayout.addWidget(self.radioButton_max)
        self.radioButton_min = QtWidgets.QRadioButton(self.centralwidget)
        self.radioButton_min.setEnabled(False)
        self.radioButton_min.setMinimumSize(QtCore.QSize(91, 21))
        self.radioButton_min.setObjectName("radioButton_min")
        self.horizontalLayout.addWidget(self.radioButton_min)
        self.radioButton_sort = QtWidgets.QRadioButton(self.centralwidget)
        self.radioButton_sort.setEnabled(False)
        self.radioButton_sort.setMinimumSize(QtCore.QSize(91, 21))
        self.radioButton_sort.setObjectName("radioButton_sort")
        self.horizontalLayout.addWidget(self.radioButton_sort)
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setEnabled(False)
        self.comboBox.setMinimumSize(QtCore.QSize(91, 22))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.horizontalLayout.addWidget(self.comboBox)
        self.radioButton_reverse = QtWidgets.QRadioButton(self.centralwidget)
        self.radioButton_reverse.setEnabled(False)
        self.radioButton_reverse.setMinimumSize(QtCore.QSize(91, 21))
        self.radioButton_reverse.setObjectName("radioButton_reverse")
        self.horizontalLayout.addWidget(self.radioButton_reverse)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.label_Result = QtWidgets.QLabel(self.centralwidget)
        self.label_Result.setMinimumSize(QtCore.QSize(461, 16))
        self.label_Result.setObjectName("label_Result")
        self.verticalLayout.addWidget(self.label_Result)
        self.textEdit_result = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit_result.setMinimumSize(QtCore.QSize(461, 111))
        self.textEdit_result.setObjectName("textEdit_result")
        self.verticalLayout.addWidget(self.textEdit_result)
        self.label_status = QtWidgets.QLabel(self.centralwidget)
        self.label_status.setMinimumSize(QtCore.QSize(461, 16))
        self.label_status.setObjectName("label_status")
        self.verticalLayout.addWidget(self.label_status)
        self.gridLayout.addLayout(self.verticalLayout, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 506, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
    
        # Başlangıçta toggle butonlar ve combobox pasif
        self.radioButton_max.setEnabled(False)
        self.radioButton_min.setEnabled(False)
        self.radioButton_sort.setEnabled(False)
        self.comboBox.setEnabled(False)
        self.radioButton_reverse.setEnabled(False)

        self.numbers = []

        # Buton tıklama eventleri
        self.pushButton_generate.clicked.connect(self.generate_numbers)
        self.radioButton_max.toggled.connect(self.max_number)
        self.radioButton_min.toggled.connect(self.min_number)
        self.radioButton_sort.toggled.connect(self.sort_numbers)
        self.comboBox.currentIndexChanged.connect(self.sort_numbers)  # combo box değişince de sort yenilensin
        self.radioButton_reverse.toggled.connect(self.reverse_numbers)
        

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton_generate.setText(_translate("MainWindow", "Generate Numbers"))
        self.label_numbers.setText(_translate("MainWindow", "Numbers"))
        self.textEdit_numbers.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">No number</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.radioButton_max.setText(_translate("MainWindow", "Max"))
        self.radioButton_min.setText(_translate("MainWindow", "Min"))
        self.radioButton_sort.setText(_translate("MainWindow", "Sort"))
        self.comboBox.setItemText(0, _translate("MainWindow", "Ascending"))
        self.comboBox.setItemText(1, _translate("MainWindow", "Descending"))
        self.radioButton_reverse.setText(_translate("MainWindow", "Reverse"))
        self.label_Result.setText(_translate("MainWindow", "Result"))
        self.textEdit_result.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">No result</p></body></html>"))
        self.label_status.setText(_translate("MainWindow", "Status"))
        
    

    def generate_numbers(self):
        self.numbers = [random.randint(0, 100) for _ in range(40)]
        self.textEdit_numbers.setPlainText(", ".join(map(str, self.numbers)))
        #self.label_numbers.setText("Numbers are generated")
        
        # Toggle butonları ve combo box etkinleştir
        self.radioButton_max.setEnabled(True)
        self.radioButton_min.setEnabled(True)
        self.radioButton_sort.setEnabled(True)
        self.comboBox.setEnabled(False)  # Combo box sadece sort seçilince aktif olur
        self.radioButton_reverse.setEnabled(True)
        self.label_status.setText("Numbers are generated")
        
        # Toggle butonları sıfırla (pasif)
        self.radioButton_max.setChecked(False)
        self.radioButton_min.setChecked(False)
        self.radioButton_sort.setChecked(False)
        self.radioButton_reverse.setChecked(False)

    def max_number(self, checked):
        if checked:
            maximum = max(self.numbers)
            self.textEdit_result.setPlainText(str(maximum))
            self.label_status.setText("Maximum number is determined")
            self.comboBox.setEnabled(False)

    def min_number(self, checked):
        if checked:
            minimum = min(self.numbers)
            self.textEdit_result.setPlainText(str(minimum))
            self.label_status.setText("Minimum number is determined")
            self.comboBox.setEnabled(False)

    def sort_numbers(self):
        if not self.radioButton_sort.isChecked():
            return
        
        ascending = self.comboBox.currentIndex() == 0
        sorted_list = sorted(self.numbers, reverse=not ascending)
        self.textEdit_result.setPlainText(", ".join(map(str, sorted_list)))
        
        if ascending:
            self.label_status.setText("Numbers are sorted in ascending order")
        else:
            self.label_status.setText("Numbers are sorted in descending order")
        
        self.comboBox.setEnabled(True)

    def reverse_numbers(self, checked):
        if checked:
            reversed_list = list(reversed(self.numbers))
            self.textEdit_result.setPlainText(", ".join(map(str, reversed_list)))
            self.label_status.setText("Numbers are reversed")
            self.comboBox.setEnabled(False)